- name: Philosophy <img src="/assets/images/icons/idea.svg" alt="Idea Icon" height="60" align="left"/>
  description: >-
               ### Is predictable
               
               * Is not altered during runtime

               * Will run the same artifacts consistently on every boot


               ### Is scalable

               * Eliminates efforts in configuring individual instances during runtime

               * Can be rolled out easily repeatedly with predictable outcome


               ### Is reliable

               * Automated recovery from faulty updates

- name: Atomic Updates <img src="/assets/images/icons/update.svg" alt="Update Icon" height="60" align="left"/>
  description: >-
               ###  Transactional Updates
               
               #### Unique
               
               By using btrfs with snapshots MicroOS uses a very space
               efficient way to store the file system's history. All the configuration
               files in `/etc` are part of the snapshot and the rollback.

               #### Flexible

               * No new package format is needed, use standard openSUSE RPMs

               * No size limitation, neither for partitions nor the operating system

               * Easy to enhance
        
               
- name: Rollback <img src="/assets/images/icons/shield.svg" alt="Shield Icon" height="60" align="left"/>
  description: >-
               ### MicroOS is an Immutable OS, rollback is simple
               
               * Immutable: No changes on disk
               
               * Rollback by rebooting to an old BTRFS snapshot

- name: Secure Updates <img src="/assets/images/icons/key.svg" alt="Key Icon" height="60" align="left"/>
  description: >-
               * Get your updates via HTTPS

               * Packages and repositories are signed by our build system

               * Packages are verified

               * No updates are done in case of dependency conflicts

               * No waste of space: Filesystem snapshots get deleted in case of unsuccessful updates

- name: Workloads <img src="/assets/images/icons/work.svg" alt="Work Icon" height="60" align="left"/>
  description: >-
               Applications are installed in containers rather than the root filesystem:

               * Isolated from the core filesystem

               * Reduced ability for malicious applications to compromise the system

               * New installation without reboot

               * Update in atomic way possible (create new, kill old)

               * Easy rollback

- name: Debugging <img src="/assets/images/icons/tool.svg" alt="Tool Icon" height="60" align="left"/>
  description: >-
               ### Debugging Toolbox Container
               
               * Launches privileged container

               * Root filesystem available below `/media/root`

               * zypper to install the necessary tools, available without reboot

               * Persistent between usages
